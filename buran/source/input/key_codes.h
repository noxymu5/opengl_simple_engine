#pragma once

#include <string>

#include <GLFW/glfw3.h>

#include <core/logging.h>

enum class KeyState {
	HELD,
	PRESSED,
	RELEASED
};

enum class KeyCode {
	NONE = -1,

	//Keyboard

	KB_A = GLFW_KEY_A,
	KB_B,
	KB_C,
	KB_D,
	KB_E,
	KB_F,
	KB_G,
	KB_H,
	KB_I,
	KB_J,
	KB_K,
	KB_L,
	KB_M,
	KB_N,
	KB_O,
	KB_P,
	KB_Q,
	KB_R,
	KB_S,
	KB_T,
	KB_U,
	KB_V,
	KB_W,
	KB_X,
	KB_Y,
	KB_Z = GLFW_KEY_Z,

	KB_SPACE = GLFW_KEY_SPACE,
	KB_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT,
	KB_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT,
	KB_RIGHT_CTRL = GLFW_KEY_RIGHT_CONTROL,
	KB_LEFT_CTRL = GLFW_KEY_LEFT_CONTROL,

	//Mouse

	MS_LEFT = GLFW_MOUSE_BUTTON_LEFT,
	MS_RIGHT = GLFW_MOUSE_BUTTON_RIGHT,
	MS_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE,

	//XInput gamepad
	
	XB_A,
	XB_B,
	XB_X,
	XB_Y,

	XB_LB,
	XB_RB,

	XB_START,
	XB_BACK,

	XB_DPAD_UP,
	XB_DPAD_DOWN,
	XB_DPAD_LEFT,
	XB_DPAD_RIGHT,

	XB_LEFT_STICK,
	XB_RIGHT_STICK,
};

#define STRINGIFY_KEY_CODE(code) if (keyCodeStr == #code) { return KeyCode::##code; }

class KeyCodeSerializer {
public:
	static KeyCode GetKeyCodeFromSting(std::string keyCodeStr) {
		STRINGIFY_KEY_CODE(KB_A)
		STRINGIFY_KEY_CODE(KB_B)
		STRINGIFY_KEY_CODE(KB_C)
		STRINGIFY_KEY_CODE(KB_D)
		STRINGIFY_KEY_CODE(KB_E)
		STRINGIFY_KEY_CODE(KB_F)
		STRINGIFY_KEY_CODE(KB_G)
		STRINGIFY_KEY_CODE(KB_H)
		STRINGIFY_KEY_CODE(KB_I)
		STRINGIFY_KEY_CODE(KB_J)
		STRINGIFY_KEY_CODE(KB_K)
		STRINGIFY_KEY_CODE(KB_L)
		STRINGIFY_KEY_CODE(KB_M)
		STRINGIFY_KEY_CODE(KB_N)
		STRINGIFY_KEY_CODE(KB_O)
		STRINGIFY_KEY_CODE(KB_P)
		STRINGIFY_KEY_CODE(KB_Q)
		STRINGIFY_KEY_CODE(KB_R)
		STRINGIFY_KEY_CODE(KB_S)
		STRINGIFY_KEY_CODE(KB_T)
		STRINGIFY_KEY_CODE(KB_U)
		STRINGIFY_KEY_CODE(KB_V)
		STRINGIFY_KEY_CODE(KB_W)
		STRINGIFY_KEY_CODE(KB_X)
		STRINGIFY_KEY_CODE(KB_Y)
		STRINGIFY_KEY_CODE(KB_Z)

		STRINGIFY_KEY_CODE(KB_SPACE)
		STRINGIFY_KEY_CODE(KB_LEFT_SHIFT)
		STRINGIFY_KEY_CODE(KB_RIGHT_SHIFT)
		STRINGIFY_KEY_CODE(KB_RIGHT_CTRL)
		STRINGIFY_KEY_CODE(KB_LEFT_CTRL)

		LOG("Unknown key code %s", keyCodeStr.c_str())
		return KeyCode::NONE;
	}
};